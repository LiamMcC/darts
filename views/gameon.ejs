<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DARTS</title>

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }

     .dsss {

        min-height: 100px;
        width: 26%;
        display: inline-block;
     }

        label {
            margin-bottom: 5px;
            font-weight: bold;
        }

        input {
            padding: 8px;
            width: 100px;
            margin-bottom: 10px;
        }

        #sumTotal {
            margin-top: 10px;
            font-size: 18px;
            font-weight: bold;
        }

        .button-group {
            display: flex;
            justify-content: space-around;
            width: 100px;
            
        }

        button {
            padding: 10px;
            color: white;
            cursor: pointer;
            width: 40px;
            border: none;
            background-color: aqua;
        }

        #btnD {
            background-color: blue;
        }

        #btnT {
            background-color: black;
        }
    </style>
</head>
    <body>

        <h1>Game On...</h1>
        <p><a href="/">Home</a></p>
        <p>Put an ajax panel here updating the score from the DB every second</p>
        <p>Have the score be confirmed on a button press that at the same time <br>
        updates the database with the new score and sets the button click to be the next Players
        <br>
        Also it highlights the name of he current player
        </p>
        
        <% if (result.length > 0) { %>
            <p>Game Number: <%= result[1].gameNo %>...</p>
            
    <h1>Players in this game</h1>
    <ul id="userList">
        <% result.forEach(user => { %>
          <li><%= user.uname %>. Score: <%= user.score %> </li>
        <% }); %>
      </ul>
        <% } else { %>
            <p>No data available.</p>
        <% } %>

        
        <button id="userRotationBtn" onclick="rotateUsers()" style="width:30%;">Load Next User</button>
        <hr>
        <div class="dsss">
            <label for="d1">D1:</label>
            <input type="text" id="d1" name="d1" placeholder="Enter value for D1" oninput="updateSum()" onblur="handleBlur('d1')">
            <div class="button-group">
                <button id="btnD1" onclick="applyBonus('D', 'd1')">D</button>
                <button id="btnT1" onclick="applyBonus('T', 'd1')">T</button>
            </div>
        </div>
    
        <div class="dsss">
            <label for="d2">D2:</label>
            <input type="text" id="d2" name="d2" placeholder="Enter value for D2" oninput="updateSum()" onblur="handleBlur('d2')">
            <div class="button-group">
                <button id="btnD2" onclick="applyBonus('D', 'd2')">D</button>
                <button id="btnT2" onclick="applyBonus('T', 'd2')">T</button>
            </div>
        </div>
    
        <div class="dsss">
            <label for="d3">D3:</label>
            <input type="text" id="d3" name="d3" placeholder="Enter value for D3" oninput="updateSum()" onblur="handleBlur('d3')">
            <div class="button-group">
                <button id="btnD3" onclick="applyBonus('D', 'd3')">D</button>
                <button id="btnT3" onclick="applyBonus('T', 'd3')">T</button>
            </div>
        </div>
    
        <p id="sumTotal">Sum Total: 0</p>

        <hr>

    
        <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.0/socket.io.js"></script>
    
        <script>
            const socket = io();
    
            function updateSum() {
                // Get the values from the text boxes
                let d1Value = parseInt(document.getElementById('d1').value) || 0;
                let d2Value = parseInt(document.getElementById('d2').value) || 0;
                let d3Value = parseInt(document.getElementById('d3').value) || 0;
    
                // Calculate the sum total
                let sumTotal = d1Value + d2Value + d3Value;
    
                // Display the sum total on the page
                document.getElementById('sumTotal').innerText = 'Sum Total: ' + sumTotal;
    
                // Emit a 'updateSum' event to the server
                socket.emit('updateSum', { sumTotal });
            }
    
            function applyBonus(bonusType, textBoxId) {
                // Get the current value of the corresponding text box
                let currentValue = parseInt(document.getElementById(textBoxId).value) || 0;
    
                // Apply bonus based on 'D' or 'T'
                if (bonusType === 'D') {
                    currentValue *= 2;
                } else if (bonusType === 'T') {
                    currentValue *= 3;
                }
    
                // Update the value in the corresponding text box
                document.getElementById(textBoxId).value = currentValue;
    
                // Update the total sum
                updateSum();
                socket.emit('scoreUpdated', { textBoxId, currentValue });
            }
    
            function handleBlur(textBoxId) {
      // Get the current value of the text box
      let currentValue = parseInt(document.getElementById(textBoxId).value) || 0;

      // Update the total sum
      updateSum();

      // Emit a 'scoreUpdated' event to the server
      socket.emit('scoreUpdated', { textBoxId, currentValue });
    }


            // Listen for 'sumUpdated' event
            socket.on('sumUpdated', ({ sumTotal }) => {
                // Update the displayed sum total on the client-side
                document.getElementById('sumTotal').innerText = 'Sum Total: ' + sumTotal;
            });

            
            socket.on('scoreUpdated', ({ textBoxId, currentValue }) => {
      // Update the value in the corresponding text box on other screens
      document.getElementById(textBoxId).value = currentValue;
      
    });

           



        // The dynamic score update 

        window.onload = function () {
  // ... existing code ...

  // Listen for the 'latestUserData' event from the server
  socket.on('latestUserData', (data) => {
    refreshUserList(data);
  });

  // Trigger the initial fetch of user data
  const urlParams = new URLSearchParams(window.location.search);
const gameNoPass = urlParams.get('gameId');
socket.emit('requestLatestUserData', { gameId: gameNoPass });

  // Periodically request the latest user data (every 5 seconds in this example)
  setInterval(() => {
    const urlParams = new URLSearchParams(window.location.search);
const gameNoPass = urlParams.get('gameId');
socket.emit('requestLatestUserData', { gameId: gameNoPass });
  }, 5000);

  // ... existing code ...

  // Function to refresh the user list on the page
  function refreshUserList(data) {
    const userList = document.getElementById('userList');
    userList.innerHTML = ''; // Clear the existing list

    data.forEach(user => {
      const listItem = document.createElement('li');
      listItem.innerHTML = `${user.uname}. Score: ${user.score}`;
      userList.appendChild(listItem);
    });
  }
};
        
        </script>
    </body>
    </html>
